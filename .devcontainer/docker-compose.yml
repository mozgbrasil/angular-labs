version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        # Update 'VARIANT' to pick an LTS version of Node.js: 16, 14, 12.
        # Append -bullseye or -buster to pin to an OS version.
        # Use -bullseye variants on local arm64/Apple Silicon.
        VARIANT: 14-buster
    volumes:
      - ..:/workspace:cached
    init: true

    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    # network_mode: service:mongodb
    network_mode: "host"
    # Uncomment the next line to use a non-root user for all processes.
    # user: node

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  mongodb:
    image: mongo
    network_mode: "host"
    # restart: unless-stopped
    ports:
      - 27017:27017
    volumes:
      - mongodb-data:/data/db
    # Uncomment to change startup options
    # environment:
    #  MONGO_INITDB_ROOT_USERNAME: root
    #  MONGO_INITDB_ROOT_PASSWORD: example
    #  MONGO_INITDB_DATABASE: your-database-here

  mongo-express:
    image: mongo-express
    network_mode: "host"
    restart: unless-stopped
    ports:
      - 8081:8081
    depends_on:
      - mongodb
    environment:
      ME_CONFIG_MONGODB_URL: ${ME_CONFIG_MONGODB_URL:-mongodb://localhost:27017/mjv?ssl=false}

  mysql:
    image: mysql:5.7
    network_mode: "host"
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root_pass
      MYSQL_DATABASE: mysql
      MYSQL_USER: db_user
      MYSQL_PASSWORD: db_pass

  # mariadb:
  #   image: mariadb:10.4
  #   restart: unless-stopped
  #   volumes:
  #     - mariadb-data:/var/lib/mysql
  #   environment:
  #     MYSQL_ROOT_PASSWORD: mariadb
  #     MYSQL_DATABASE: mariadb
  #     MYSQL_USER: mariadb
  #     MYSQL_PASSWORD: mariadb

  phpmyadmin:
    image: phpmyadmin
    network_mode: "host"
    environment:
      PMA_HOST: 127.0.0.1
      MYSQL_ROOT_PASSWORD: root_pass
      MYSQL_USERNAME: db_user

  postgres:
    image: postgres
    network_mode: "host"
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-hello}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres-data:/var/lib/postgresql/data

  adminer:
    image: adminer
    network_mode: "host"

  # pgadmin:
  #   image: "dpage/pgadmin4"
  #   network_mode: "host"
  #   restart: unless-stopped
  #   ports:
  #     - 15432:15432
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@gmail.com}
  #     PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
  #   volumes:
  #     - pgadmin-data:/var/lib/pgadmin

  # redis:
  #   image: redis
  #   network_mode: "host"
  #   ports:
  #     - 6379:6379

  # redisinsight:
  #   image: redislabs/redisinsight
  #   network_mode: "host"
  #   restart: unless-stopped
  #   ports:
  #     - 8001:8001
  #   volumes:
  #     - redisinsight-data:/db

  # rabbitmq:
  #   image: rabbitmq:3.9-management-alpine
  #   ports:
  #     - 15672:15672
  #     - 5672:5672
  #   volumes:
  #     - rabbitmq-data:/var/lib/rabbitmq/mnesia
  #   environment:
  #     RABBITMQ_DEFAULT_USER: admin
  #     RABBITMQ_DEFAULT_PASS: admin
  #     RABBITMQ_DEFAULT_VHOST: "/"

  # rancher:
  #   image: rancher/rancher:latest
  #   restart: always
  #   privileged: true
  #   ports:
  #     - 80:80
  #     - 443:443

volumes:
  mongodb-data:
  mysql-data:
  # mariadb-data:
  postgres-data:
  pgadmin-data:
  redisinsight-data:
  rabbitmq-data:
